package com.sshtools.pty;

import c.CLibrary;

import com.sun.jna.Native;
import com.sun.jna.Pointer;

/**
 * This extension exists just for the methods that dont get generated by JNAerator. They 
 * can be keep here for now while I regenerate sources until the job is complete. Once done,
 * these can be merged into the main library.
 */
public interface XCLibrary extends CLibrary {

	public static final XCLibrary INSTANCE = (XCLibrary)Native.loadLibrary(CLibrary.JNA_LIBRARY_NAME, XCLibrary.class);
	
	int posix_openpt(int __oflag);
	int grantpt(int __fd);
	int unlockpt(int __fd);
	Pointer ptsname(int __fs);
	
	// TODO
	// pretty sure this isn't write
	
	final static __sighandler_t SIG_ERR = new __sighandler_t() {
		public void apply(int int1) {
		}
	}; 
	final static __sighandler_t SIG_DFL = new __sighandler_t() {
		public void apply(int int1) {
		}
	}; 
	final static __sighandler_t SIG_IGN = new __sighandler_t() {
		public void apply(int int1) {
		}
	}; 
	
//	((__sighandler_t) -1)           /* Error return.  */
//	#define SIG_DFL ((__sighandler_t) 0)            /* Default action.  */
//	#define SIG_IGN ((__sighandler_t) 1)            /* Ignore signal.  */

}
