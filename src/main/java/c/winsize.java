package c;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bits/ioctl-types.h:3317</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class winsize extends Structure {
	public short ws_row;
	public short ws_col;
	public short ws_xpixel;
	public short ws_ypixel;
	public winsize() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ws_row", "ws_col", "ws_xpixel", "ws_ypixel");
	}
	public winsize(short ws_row, short ws_col, short ws_xpixel, short ws_ypixel) {
		super();
		this.ws_row = ws_row;
		this.ws_col = ws_col;
		this.ws_xpixel = ws_xpixel;
		this.ws_ypixel = ws_ypixel;
	}
	public static class ByReference extends winsize implements Structure.ByReference {
		
	};
	public static class ByValue extends winsize implements Structure.ByValue {
		
	};
}
