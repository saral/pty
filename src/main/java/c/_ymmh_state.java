package c;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bits/sigcontext.h:628</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class _ymmh_state extends Structure {
	/** C type : __uint32_t[64] */
	public int[] ymmh_space = new int[64];
	public _ymmh_state() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ymmh_space");
	}
	/** @param ymmh_space C type : __uint32_t[64] */
	public _ymmh_state(int ymmh_space[]) {
		super();
		if ((ymmh_space.length != this.ymmh_space.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ymmh_space = ymmh_space;
	}
	public static class ByReference extends _ymmh_state implements Structure.ByReference {
		
	};
	public static class ByValue extends _ymmh_state implements Structure.ByValue {
		
	};
}
