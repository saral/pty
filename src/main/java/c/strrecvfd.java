package c;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : x86_64-linux-gnu/bits/stropts.h:104</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class strrecvfd extends Structure {
	public int fd;
	/** C type : uid_t */
	public int uid;
	/** C type : gid_t */
	public int gid;
	/**
	 * UnixWare/Solaris compatibility<br>
	 * C type : char[8]
	 */
	public byte[] __fill = new byte[8];
	public strrecvfd() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("fd", "uid", "gid", "__fill");
	}
	/**
	 * @param uid C type : uid_t<br>
	 * @param gid C type : gid_t<br>
	 * @param __fill UnixWare/Solaris compatibility<br>
	 * C type : char[8]
	 */
	public strrecvfd(int fd, int uid, int gid, byte __fill[]) {
		super();
		this.fd = fd;
		this.uid = uid;
		this.gid = gid;
		if ((__fill.length != this.__fill.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.__fill = __fill;
	}
	public static class ByReference extends strrecvfd implements Structure.ByReference {
		
	};
	public static class ByValue extends strrecvfd implements Structure.ByValue {
		
	};
}
