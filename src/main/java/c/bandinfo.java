package c;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * Structure used for the I_FLUSHBAND ioctl on streams.<br>
 * <i>native declaration : x86_64-linux-gnu/bits/stropts.h:75</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class bandinfo extends Structure {
	public byte bi_pri;
	public int bi_flag;
	public bandinfo() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("bi_pri", "bi_flag");
	}
	public bandinfo(byte bi_pri, int bi_flag) {
		super();
		this.bi_pri = bi_pri;
		this.bi_flag = bi_flag;
	}
	public static class ByReference extends bandinfo implements Structure.ByReference {
		
	};
	public static class ByValue extends bandinfo implements Structure.ByValue {
		
	};
}
