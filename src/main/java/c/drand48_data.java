package c;
import com.sun.jna.NativeLong;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * Data structure for communication with thread safe versions.  This<br>
 * type is to be regarded as opaque.  It's only exported because users<br>
 * have to allocate objects of this type.<br>
 * <i>native declaration : stdlib.h:1132</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class drand48_data extends Structure {
	/**
	 * Current state.<br>
	 * C type : unsigned short[3]
	 */
	public short[] __x = new short[3];
	/**
	 * Old state.<br>
	 * C type : unsigned short[3]
	 */
	public short[] __old_x = new short[3];
	/** Additive const. in congruential formula. */
	public short __c;
	/** Flag for initializing. */
	public short __init;
	/** Factor in congruential formula. */
	public NativeLong __a;
	public drand48_data() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("__x", "__old_x", "__c", "__init", "__a");
	}
	/**
	 * @param __x Current state.<br>
	 * C type : unsigned short[3]<br>
	 * @param __old_x Old state.<br>
	 * C type : unsigned short[3]<br>
	 * @param __c Additive const. in congruential formula.<br>
	 * @param __init Flag for initializing.<br>
	 * @param __a Factor in congruential formula.
	 */
	public drand48_data(short __x[], short __old_x[], short __c, short __init, NativeLong __a) {
		super();
		if ((__x.length != this.__x.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.__x = __x;
		if ((__old_x.length != this.__old_x.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.__old_x = __old_x;
		this.__c = __c;
		this.__init = __init;
		this.__a = __a;
	}
	public static class ByReference extends drand48_data implements Structure.ByReference {
		
	};
	public static class ByValue extends drand48_data implements Structure.ByValue {
		
	};
}
