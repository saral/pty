package c;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bits/termios.h:2112</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class termios extends Structure {
	/**
	 * input mode flags<br>
	 * C type : tcflag_t
	 */
	public int c_iflag;
	/**
	 * output mode flags<br>
	 * C type : tcflag_t
	 */
	public int c_oflag;
	/**
	 * control mode flags<br>
	 * C type : tcflag_t
	 */
	public int c_cflag;
	/**
	 * local mode flags<br>
	 * C type : tcflag_t
	 */
	public int c_lflag;
	/**
	 * line discipline<br>
	 * C type : cc_t
	 */
	public byte c_line;
	/**
	 * control characters<br>
	 * C type : cc_t[32]
	 */
	public byte[] c_cc = new byte[32];
	/**
	 * input speed<br>
	 * C type : speed_t
	 */
	public int c_ispeed;
	/**
	 * output speed<br>
	 * C type : speed_t
	 */
	public int c_ospeed;
	public termios() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("c_iflag", "c_oflag", "c_cflag", "c_lflag", "c_line", "c_cc", "c_ispeed", "c_ospeed");
	}
	/**
	 * @param c_iflag input mode flags<br>
	 * C type : tcflag_t<br>
	 * @param c_oflag output mode flags<br>
	 * C type : tcflag_t<br>
	 * @param c_cflag control mode flags<br>
	 * C type : tcflag_t<br>
	 * @param c_lflag local mode flags<br>
	 * C type : tcflag_t<br>
	 * @param c_line line discipline<br>
	 * C type : cc_t<br>
	 * @param c_cc control characters<br>
	 * C type : cc_t[32]<br>
	 * @param c_ispeed input speed<br>
	 * C type : speed_t<br>
	 * @param c_ospeed output speed<br>
	 * C type : speed_t
	 */
	public termios(int c_iflag, int c_oflag, int c_cflag, int c_lflag, byte c_line, byte c_cc[], int c_ispeed, int c_ospeed) {
		super();
		this.c_iflag = c_iflag;
		this.c_oflag = c_oflag;
		this.c_cflag = c_cflag;
		this.c_lflag = c_lflag;
		this.c_line = c_line;
		if ((c_cc.length != this.c_cc.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.c_cc = c_cc;
		this.c_ispeed = c_ispeed;
		this.c_ospeed = c_ospeed;
	}
	public static class ByReference extends termios implements Structure.ByReference {
		
	};
	public static class ByValue extends termios implements Structure.ByValue {
		
	};
}
