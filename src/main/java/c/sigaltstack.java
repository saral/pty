package c;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bits/sigstack.h:662</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class sigaltstack extends Structure {
	/** C type : void* */
	public Pointer ss_sp;
	public int ss_flags;
	public NativeLong ss_size;
	public sigaltstack() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ss_sp", "ss_flags", "ss_size");
	}
	/** @param ss_sp C type : void* */
	public sigaltstack(Pointer ss_sp, int ss_flags, NativeLong ss_size) {
		super();
		this.ss_sp = ss_sp;
		this.ss_flags = ss_flags;
		this.ss_size = ss_size;
	}
	public static class ByReference extends sigaltstack implements Structure.ByReference {
		
	};
	public static class ByValue extends sigaltstack implements Structure.ByValue {
		
	};
}
