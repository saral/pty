package c;
import com.sun.jna.NativeLong;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bits/sigcontext.h:586</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class _fpstate extends Structure {
	/** FPU environment matching the 64-bit FXSAVE layout. */
	public short cwd;
	public short swd;
	public short ftw;
	public short fop;
	/** C type : __uint64_t */
	public NativeLong rip;
	/** C type : __uint64_t */
	public NativeLong rdp;
	public int mxcsr;
	public int mxcr_mask;
	/** C type : _fpxreg[8] */
	public _fpxreg[] _st = new _fpxreg[8];
	/** C type : _xmmreg[16] */
	public _xmmreg[] _xmm = new _xmmreg[16];
	/** C type : __uint32_t[24] */
	public int[] padding = new int[24];
	public _fpstate() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("cwd", "swd", "ftw", "fop", "rip", "rdp", "mxcsr", "mxcr_mask", "_st", "_xmm", "padding");
	}
	public static class ByReference extends _fpstate implements Structure.ByReference {
		
	};
	public static class ByValue extends _fpstate implements Structure.ByValue {
		
	};
}
