package c;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : x86_64-linux-gnu/bits/stropts.h:111</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class str_list extends Structure {
	public int sl_nmods;
	/** C type : str_mlist* */
	public c.str_mlist.ByReference sl_modlist;
	public str_list() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("sl_nmods", "sl_modlist");
	}
	/** @param sl_modlist C type : str_mlist* */
	public str_list(int sl_nmods, c.str_mlist.ByReference sl_modlist) {
		super();
		this.sl_nmods = sl_nmods;
		this.sl_modlist = sl_modlist;
	}
	public static class ByReference extends str_list implements Structure.ByReference {
		
	};
	public static class ByValue extends str_list implements Structure.ByValue {
		
	};
}
